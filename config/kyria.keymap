/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/* &bt (bluetooth) reference
 * BT_CLR	Clear bond information between the keyboard and host for the selected profile.
 * BT_NXT	Switch to the next profile, cycling through to the first one when the end is reached.
 * BT_PRV	Switch to the previous profile, cycling through to the last one when the beginning is reached.
 * BT_SEL	Select the 0-indexed profile by number. Please note: this definition must include a number as an argument in the keymap to work correctly. eg. BT_SEL 0
 */

// keymap info: https://zmk.dev/docs/features/keymaps
// keymap codes: https://zmk.dev/docs/codes

/ {
// 	// example combos from docs:
// 	combos {
// 		compatible = "zmk,combos";
// 		combo_esc {
// 			timeout-ms = <50>;
// 			key-positions = <0 1>;
// 			bindings = <&kp ESC>;
// 		};
// 	};
	
	// make it so that holding both layers 1 and 2 becomes layer 3
	conditional_layers {
		compatible = "zmk,conditional-layers";
		tri_layer {
			if-layers = <1 2>;
			then-layer = <3>;
		};
	};
	
	keymap {
// no I'm not tabbing these an extra 8-16 characters longer than they already are
compatible = "zmk,keymap";



layer_0 { // the default layer
bindings = <
// ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮                                               ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
     &kp ESC     &kp Q      &kp W      &kp E      &kp R      &kp T                                                      &kp Y      &kp U      &kp I      &kp O      &kp P    &kp C_MUTE
// ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤                                               ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
     &kp TAB     &kp A      &kp S      &kp D      &kp F      &kp G                                                      &kp H      &kp J      &kp K      &kp L     &kp SEMI   &kp SQT
// ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┼──────────┬──────────╮   ╭──────────┬──────────┼──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
      &mo 1      &kp Z      &kp X      &kp C      &kp V      &kp B     &kp INS   &kp PSCRN        &kp F5    &kp F12     &kp N      &kp M    &kp COMMA   &kp DOT    &kp FSLH    &mo 2
// ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
                                     &kp LMETA   &kp DEL    &kp BSPC  &kp LSHFT   &kp LALT      &kp ENTER  &kp SPACE  &kp LCTRL  &kp K_APP    &mo 3
//                                  ╰──────────┴──────────┴──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────┴──────────┴──────────╯
>;
sensor-bindings = <&inc_dec_kp N O &inc_dec_kp C_VOL_DN C_VOL_UP>; // volume up/down and mute (knob is on top right corner - NO left side knob)
};



layer_1 { // navigation and numbers (includes symbols on numbers, although some will be repeated eslewhere)
bindings = <
// ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮                                               ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
      &trans     &none     &kp HOME    &kp UP    &kp END   &kp PG_UP                                                  &kp GRAVE    &kp N7     &kp N8     &kp N9   &kp EQUAL &kp C_SLEEP
// ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤                                               ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
      &trans     &none     &kp LEFT   &kp DOWN  &kp RIGHT  &kp PG_DN                                                  &kp UNDER    &kp N4     &kp N5     &kp N6   &kp MINUS    &trans
// ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┼──────────┬──────────╮   ╭──────────┬──────────┼──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
      &trans     &none   &kp LA(LEFT)  &none   &kp LA(RIGHT) &none      &trans     &trans         &trans     &trans     &kp N0     &kp N1     &kp N2     &kp N3    &kp BSLH    &trans
// ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
                                       &trans     &trans     &trans     &trans     &trans         &trans     &trans     &trans     &trans     &trans
//                                  ╰──────────┴──────────┴──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────┴──────────┴──────────╯
>;
sensor-bindings = <&inc_dec_kp N O &inc_dec_kp C_BRI_DN C_BRI_UP>; // brightness and sleep
};


layer_2 { // braces and parens
bindings = <
// ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮                                               ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
      &trans   &kp GRAVE    &none     &kp LBKT   &kp RBKT    &none                                                      &none      &none      &none      &none      &none     &kp C_PP
// ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤                                               ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
      &trans     &none      &none     &kp LPAR   &kp RPAR    &none                                                      &none      &none      &none      &none      &none      &trans
// ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┼──────────┬──────────╮   ╭──────────┬──────────┼──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
      &trans     &none      &none     &kp LBRC   &kp RBRC    &none      &trans     &trans         &trans     &trans     &none      &none      &none      &none      &none      &trans
// ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
                                       &trans     &trans     &trans     &trans     &trans         &trans     &trans     &trans     &trans     &trans
//                                  ╰──────────┴──────────┴──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────┴──────────┴──────────╯
>;
sensor-bindings = <&inc_dec_kp N O &inc_dec_kp C_PREV C_NEXT>; // skip/rewind tracks and pause/play (C_PP)
};



layer_3 { // funciton keys and bluetooth
bindings = <
// ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮                                               ╭──────────┬──────────┬──────────┬──────────┬──────────┬──────────╮
      &trans     &none      &none      &none   &out OUT_TOG &bt BT_CLR                                                  &kp F9     &kp F10    &kp F11    &kp F12     &none    &kp C_PWR
// ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤                                               ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
      &trans    &none  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3                                              &kp F5     &kp F6     &kp F7     &kp F8     &none      &trans
// ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┼──────────┬──────────╮   ╭──────────┬──────────┼──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤
      &trans     &none      &none      &none      &none      &none      &trans     &trans         &trans     &trans     &kp F1     &kp F2     &kp F3     &kp F4     &none      &trans
// ╰──────────┴──────────┴──────────┼──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┼──────────┴──────────┴──────────╯
                                       &trans     &trans     &trans     &trans     &trans         &trans     &trans     &trans     &trans     &trans
//                                  ╰──────────┴──────────┴──────────┴──────────┴──────────╯   ╰──────────┴──────────┴──────────┴──────────┴──────────╯
>;
sensor-bindings = <&inc_dec_kp N O &inc_dec_kp C_VOL_DN C_VOL_UP>; // brightness and power-off
};



}; // END keymap
}; // END /
